my_data <- read.csv(file.choose(), header=T)
my_data$Activity_Level<-substr(my_data$ACTIVITY.LEVEL, 7, 7)
my_data$Activity_Level<-as.numeric(my_data$Activity_Level)
new_df <- my_data[!is.na(my_data$Activity_Level),]
state<-aggregate( Activity_Level ~ STATENAME, new_df, mean)
#state$STATENAME<- tolower(state$STATENAME)
library(ggplot2)
library(maps)
library(maptools)
library(urbnmapr)
library(mapproj)
library(usmap)
#states <- map_data("state")
map.df <- merge(statedata,state, by.x="state_name",by.y='STATENAME', all.x=T)
map.df$fips <- map.df$state_fips
map.df <- map.df[order(map.df$fips),]
plot_usmap(data = map.df, values = "Activity_Level", lines = "black", title="Influenza Heat Map as shown on CDC") +
scale_fill_gradientn(colours=c('green3','yellow','darkorange1','red','darkred'),na.value="green3",name = "Activity_Level", label = scales::comma)+
theme(legend.position = "right")
?plot_usmap
ggplot(title("Influenza Heat Map as shown on CDC")) + plot_usmap(data = map.df, values = "Activity_Level", lines = "black") +
scale_fill_gradientn(colours=c('green3','yellow','darkorange1','red','darkred'),na.value="green3",name = "Activity_Level", label = scales::comma)+
theme(legend.position = "right")
plot_usmap(data = map.df, values = "Activity_Level", lines = "black") +
scale_fill_gradientn(colours=c('green3','yellow','darkorange1','red','darkred'),na.value="green3",name = "Activity_Level", label = scales::comma)+
theme(legend.position = "right")
my_data <- read.csv(file.choose(), header=T)
my_data$Activity_Level<-substr(my_data$ACTIVITY.LEVEL, 7, 7)
my_data$Activity_Level<-as.numeric(my_data$Activity_Level)
new_df <- my_data[!is.na(my_data$Activity_Level),]
state<-aggregate( Activity_Level ~ STATENAME, new_df, mean)
#state$STATENAME<- tolower(state$STATENAME)
library(ggplot2)
library(maps)
library(maptools)
library(urbnmapr)
library(mapproj)
library(usmap)
#states <- map_data("state")
map.df <- merge(statedata,state, by.x="state_name",by.y='STATENAME', all.x=T)
map.df$fips <- map.df$state_fips
map.df <- map.df[order(map.df$fips),]
plot_usmap(data = map.df, values = "Activity_Level", lines = "black") +
scale_fill_gradientn(colours=c('green3','yellow','darkorange1','red','darkred'),na.value="green3",name = "Activity_Level", label = scales::comma)+
theme(legend.position = "right")
setwd("~/Lab1EDA/Lab1EDA/FluViewPhase2Data_National")
library("ggmap")
library("maptools")
library(maps)
register_google(key = "AIzaSyC-auTKdwXmCaTvGwqFPBYJ7-dzDrwSDPo")
data = read.csv(file.choose(), header = TRUE)
trim_data = data[21:72,]
trim_data$V3 = as.numeric(paste(as.numeric(as.character(trim_data$V3)),trim_data$V4, sep = ""))
barplot(as.numeric(as.character(trim_data$V6)), xlab = "Weeks", ylab="Number of Specimens",
names.arg=c(as.character(trim_data$V3)), main = "Influenza Positive Tests reported to CDC",
col = "yellow", ylim=c(0,14500))
par(new=TRUE)
barplot(as.numeric(as.character(trim_data$V7)), col = "green", yaxt = "n", ylim = c(0,14500))
# legend(30, 10000, legend = c("A","B", "Percent Positive", "% Positive Flu A", "% Positive Flu B"),
#        col = c("yellow","green"), fill = c("yellow","green"), lty = c(1,2))
par(new=TRUE)
plot(as.numeric(as.character(trim_data$V8)), col="black", ylim=c(0,27), type="l",
xaxt = "n", yaxt = "n", ylab = "", xlab = "", lwd=2)
axis(side = 4)
mtext("Percent Positive", side=4, col="black")
par(new=TRUE)
plot(as.numeric(as.character(trim_data$V9)), col="yellow", ylim=c(0,27), type="l",
xaxt = "n", yaxt = "n", ylab = "", xlab = "", lty=4, lwd=2)
par(new=TRUE)
plot(as.numeric(as.character(trim_data$V10)), col="green", ylim=c(0,27), type="l",
xaxt = "n", yaxt = "n", ylab = "", xlab = "", lty=5, lwd=2)
legend(20, 27, legend = c("A","B", "Percent Positive", "% Positive Flu A", "% Positive Flu B"),
col = c("yellow","green","black", "yellow", "green"), cex=1,
fill = c("yellow","green","black","white", "white"), lwd =c("","",2, 2, 2), lty = c(1,4,5))
setwd("~/Lab1EDA/Lab1EDA/FluViewPhase2Data_National")
# Load data
nationalClinicalData <- read.csv("WHO_NREVSS_Clinical_Labs.csv")
nationalPublicHealthData <- read.csv("WHO_NREVSS_Public_Health_Labs.csv")
# to load 52 weeks recent data
clinicalData <- tail(nationalClinicalData,-19)
publicHealthData <- tail(nationalPublicHealthData,-19)
#to know the data type of the data
str(clinicalData)
#2.5 Influenza Positive Tests reported by U.S. Clinical Laboratories
totalPositiveSpecimens <- NULL
PositiveA <- NULL
PositiveB <- NULL
for (i in 1:nrow(clinicalData)) {
totalPositiveSpecimens <- ((clinicalData$PERCENT.POSITIVE*clinicalData$TOTAL.SPECIMENS)/100)
#titles <- c(titles,extractTitle(clinicalData[i,"PositiveSpecimens"]))
PositiveA <- ((clinicalData$PERCENT.A*clinicalData$TOTAL.SPECIMENS)/100)
#posiA <- c(PositiveA,extractPositiveA(clinicalData[i,"PositiveSpecimens"]))
PositiveB <- ((clinicalData$PERCENT.B*clinicalData$TOTAL.SPECIMENS)/100)
}
clinicalData$PositiveA <- (paste(as.character(PositiveA)))
clinicalData$PositiveB <- (paste(as.character(PositiveB)))
#totalPositiveSpecimens <- as.factor(totalPositiveSpecimens)
clinicalData$PERCENT.A <- as.factor(clinicalData$PERCENT.A)
clinicalData$PERCENT.B <- as.factor(clinicalData$PERCENT.B)
#to plot graph
library(ggplot2)
#nationalClinicalData$Pclass <- as.factor(train$Pclass)
clinicalData$new.group <- as.numeric(paste(as.numeric(as.character(clinicalData$YEAR)),clinicalData$WEEK, sep = ""))
#ggplot(clinicalData, aes(x= clinicalData$new.group , fill= clinicalData$PERCENT.A,clinicalData$PERCENT.B)) +
# geom_bar(stat = "identity")+
#xlab("Week")+
#ylab("Number of Positive Specimens")+
#geom_boxplot() +
#labs(fill="clinicalData$PERCENT.POSITIVE","clinicalData$PERCENT.B")+
#theme(axis.text.x = element_text(angle=60, hjust=1))
#c combine value into the vector list
par(mar=c(6,7,2,2))
barplot(t(clinicalData[c('PositiveA')]),
names.arg = c(as.character(clinicalData$new.group)),
main = "Influenza Positive Tests reported to CDC by U.S. Clinical Laboratories",
las=2,
xlab = "Week",
ylab = "Number of Positive Specimens",
ylim=c(0,14000),
col="yellow"
)
par(new=TRUE)
barplot(t(clinicalData[c('PositiveB')]),
ylim=c(0,14000),
yaxt = "n",
xaxt = "n",
col="green"
)
par(new=TRUE)
plot(clinicalData$PERCENT.POSITIVE,
col="black",
ylim=c(0,30),
type="l",
xaxt = "n",
yaxt = "n",
lty=1,
ylab = "", xlab = "", lwd=2)
par(new=TRUE)
plot(as.numeric(as.character(clinicalData$PERCENT.A)),
col="yellow",
ylim=c(0,30),
type="l",
xaxt = "n",
yaxt = "n",
lty=5,
ylab = "", xlab = "", lwd=2)
axis(4)
par(new=TRUE)
plot(as.numeric(as.character(clinicalData$PERCENT.B)),
col="green",
ylim=c(0,30),
type="l",
xaxt = "n",
yaxt = "n",
lty=2,
ylab = "", xlab = "", lwd=2)
legend("center", legend = c("A","B", "Percent Positive", "% Positive Flu A", "% Positive Flu B"),
col = c("yellow","green","black", "yellow", "green"),
bty = "n",
border = c("black","black",NA,NA,NA),
fill = c("yellow","green",NA,NA,NA),
lwd =c(NA,NA,2, 2, 2),
lty = c(5,5,1))
#to know the data type of the data
str(publicHealthData)
publicHealthData$A..Subtyping.not.Performed. <- as.factor(publicHealthData$A..Subtyping.not.Performed.)
publicHealthData$A..2009.H1N1. <- as.factor(publicHealthData$A..2009.H1N1.)
publicHealthData$A..H3. <- as.factor(publicHealthData$A..H3.)
publicHealthData$H3N2v <- as.factor(publicHealthData$H3N2v)
publicHealthData$B <- as.factor(publicHealthData$B)
publicHealthData$BVic <- as.factor(publicHealthData$BVic)
publicHealthData$BYam <- as.factor(publicHealthData$BYam)
publicHealthData$combiningYearWeek <- as.numeric(paste(as.numeric(as.character(publicHealthData$YEAR)),publicHealthData$WEEK, sep = ""))
par(mar=c(6,7,2,2))
barplot(t(publicHealthData[c('A..Subtyping.not.Performed.')]),
names.arg = c(as.character(publicHealthData$combiningYearWeek)),
main = "Influenza Positive Tests reported to CDC by U.S. Public Health Laboratories",
las=2,
xlab = "Week",
ylab = "Number of Positive Specimens",
ylim=c(0,2500),
col="yellow"
)
par(new=TRUE)
barplot(t(publicHealthData[c('A..2009.H1N1.')]),
las=2,
ylim=c(0,2500),
xaxt = "n",
yaxt = "n",
col="brown"
)
par(new=TRUE)
barplot(t(publicHealthData[c('A..H3.')]),
las=2,
ylim=c(0,2500),
xaxt = "n",
yaxt = "n",
col="red"
)
par(new=TRUE)
barplot(t(publicHealthData[c('H3N2v')]),
las=2,
ylim=c(0,2500),
xaxt = "n",
yaxt = "n",
col="violet"
)
par(new=TRUE)
barplot(t(publicHealthData[c('B')]),
las=2,
ylim=c(0,2500),
xaxt = "n",
yaxt = "n",
col="darkgreen"
)
par(new=TRUE)
barplot(t(publicHealthData[c('BVic')]),
las=2,
ylim=c(0,2500),
xaxt = "n",
yaxt = "n",
col="lightgreen"
)
par(new=TRUE)
barplot(t(publicHealthData[c('BYam')]),
las=2,
ylim=c(0,2500),
xaxt = "n",
yaxt = "n",
col="green"
)
legend("topright", legend = c("A(subtyping not performed)","A(H1N1)pdm09", "A(H3N2)", "H3N2v", "B(lineage not performed)","B(Victoria Lineage)","B(Yamagata Lineage)"),
col = c("yellow","brown","red", "violet","darkgreen","lightgreen", "green"),
bty = "n",
border = c("black","black","black","black","black","black","black"),
fill = c("yellow","brown","red", "violet","darkgreen","lightgreen", "green"))
# Load data
stateClinicalData <-read.csv(file.choose(), header = TRUE)
# to load 52 weeks recent data
clinicalDataNewYork <- tail(stateClinicalData,-19)
#to know the data type of the data
str(clinicalDataNewYork)
totalPositiveSpecimens <- NULL
PositiveA <- NULL
PositiveB <- NULL
for (i in 1:nrow(clinicalDataNewYork)) {
totalPositiveSpecimens <- ((clinicalDataNewYork$PERCENT.POSITIVE*clinicalDataNewYork$TOTAL.SPECIMENS)/100)
PositiveA <- ((clinicalDataNewYork$PERCENT.A*clinicalDataNewYork$TOTAL.SPECIMENS)/100)
PositiveB <- ((clinicalDataNewYork$PERCENT.B*clinicalDataNewYork$TOTAL.SPECIMENS)/100)
}
clinicalDataNewYork$PositiveA <- (paste(as.character(PositiveA)))
clinicalDataNewYork$PositiveB <- (paste(as.character(PositiveB)))
#totalPositiveSpecimens <- as.factor(totalPositiveSpecimens)
clinicalDataNewYork$PERCENT.A <- as.factor(clinicalDataNewYork$PERCENT.A)
clinicalDataNewYork$PERCENT.B <- as.factor(clinicalDataNewYork$PERCENT.B)
#to plot graph
library(ggplot2)
#nationalClinicalData$Pclass <- as.factor(train$Pclass)
clinicalDataNewYork$new.group <- as.numeric(paste(as.numeric(as.character(clinicalDataNewYork$YEAR)),clinicalDataNewYork$WEEK, sep = ""))
#c combine value into the vector list
par(mar=c(6,7,2,2))
barplot(t(clinicalDataNewYork[c('PositiveA')]),
names.arg = c(as.character(clinicalData$new.group)),
main = "Influenza Positive Tests reported to CDC by U.S. Clinical Laboratories",
las=2,
xlab = "Week",
ylab = "Number of Positive Specimens",
ylim=c(0,1600),
col="yellow"
)
par(new=TRUE)
barplot(t(clinicalDataNewYork[c('PositiveB')]),
ylim=c(0,1600),
yaxt = "n",
xaxt = "n",
col="green"
)
par(new=TRUE)
plot(clinicalDataNewYork$PERCENT.POSITIVE,
col="black",
ylim=c(0,35),
type="l",
xaxt = "n",
yaxt = "n",
lty=1,
ylab = "", xlab = "", lwd=2)
par(new=TRUE)
plot(as.numeric(as.character(clinicalDataNewYork$PERCENT.A)),
col="yellow",
ylim=c(0,35),
type="l",
xaxt = "n",
yaxt = "n",
lty=5,
ylab = "", xlab = "", lwd=2)
axis(4)
par(new=TRUE)
plot(as.numeric(as.character(clinicalDataNewYork$PERCENT.B)),
col="green",
ylim=c(0,35),
type="l",
xaxt = "n",
yaxt = "n",
lty=2,
ylab = "", xlab = "", lwd=2)
legend("center", legend = c("A","B", "Percent Positive", "% Positive Flu A", "% Positive Flu B"),
col = c("yellow","green","black", "yellow", "green"),
bty = "n",
border = c("black","black",NA,NA,NA),
fill = c("yellow","green",NA,NA,NA),
lwd =c(NA,NA,2, 2, 2),
lty = c(5,5,1))
